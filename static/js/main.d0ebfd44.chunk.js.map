{"version":3,"sources":["Components/Navigation/Navbar/Navbar.js","Components/Table/MeteoriteTable.js","Components/Loading/Loading.js","Containers/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","root","flexGrow","paddingBottom","NavBar","classes","react_default","a","createElement","className","AppBar","position","Toolbar","Typography","variant","color","console","log","MeteoriteTable","props","tableData","Fragment","Paper","Table","TableHead","TableRow","TableCell","TableBody","map","row","key","id","component","scope","name","align","nametype","recclass","mass","fall","dist_default","format","year","reclat","reclong","theme","progress","margin","spacing","Loading","CircularProgress","Layout","state","search","backup","handleClick","e","_this","setState","length","alert","handleChange","target","value","def","capitalize","words","lowerCase","toLocaleLowerCase","firstLetterUpperCase","charAt","toUpperCase","slice","urls","concat","Promise","all","url","fetch","then","res","ok","json","catch","data","biggest","meteor","i","undefined","_this2","this","meteoriteTable","Table_MeteoriteTable","Loading_Loading","Navbar","onSubmit","preventDefault","TextField","label","type","onChange","Button","onClick","Component","App","Containers_Layout_Layout","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0ebfd44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingBottom: 50\r\n  }\r\n});\r\n\r\nconst NavBar = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Meteorite Explorer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Moment from 'react-moment'\r\nimport {\r\n  withStyles,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  MenuItem,\r\n  TextField,\r\n  Button\r\n} from \"@material-ui/core\";\r\n\r\nconst MeteoriteTable = props => {\r\n  console.log(props.tableData)\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Paper>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Id</TableCell>\r\n              <TableCell>Name Type</TableCell>\r\n              <TableCell>Rec Class</TableCell>\r\n              <TableCell>Mass (g)</TableCell>\r\n              <TableCell>Fall</TableCell>\r\n              <TableCell>Year</TableCell>\r\n              <TableCell>Latitude</TableCell>\r\n              <TableCell>Longitude</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {props.tableData.map(row => (\r\n              <TableRow key={row.id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.id}</TableCell>\r\n                <TableCell align=\"right\">{row.nametype}</TableCell>\r\n                <TableCell align=\"right\">{row.recclass}</TableCell>\r\n                <TableCell align=\"right\">{row.mass}</TableCell>\r\n                <TableCell align=\"right\">{row.fall}</TableCell>\r\n                <TableCell align=\"right\"><Moment format=\"YYYY\">{row.year}</Moment></TableCell>\r\n                <TableCell align=\"right\">{row.reclat}</TableCell>\r\n                <TableCell align=\"right\">{row.reclong}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Paper>\r\n    </React.Fragment>\r\n  );\r\n};\r\nconsole.log('i ran')\r\n\r\nexport default MeteoriteTable;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  progress: {\r\n    margin: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nfunction Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress className={classes.progress} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\n\r\nimport NavBar from \"../../Components/Navigation/Navbar/Navbar\";\r\nimport MeteoriteTable from \"../../Components/Table/MeteoriteTable\";\r\nimport Loading from \"../../Components/Loading/Loading\";\r\nimport \"./Layout.css\";\r\nimport { MenuItem, TextField, Button,  } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/styles'\r\nimport capitalize from 'capitalize'\r\n\r\n\r\nclass Layout extends Component {\r\n \r\n  state = {\r\n    tableData: null,\r\n    search: \"\",\r\n    backup: null\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://data.nasa.gov/resource/gh4g-9sfh.json\")\r\n      .then(res => res.json())\r\n\r\n      .then(res => this.setState({ tableData: res, backup: res }));\r\n  }\r\n\r\n  handleClick = e => {\r\n    if (this.state.search === \"\") {\r\n      return null;\r\n    } else {\r\n      this.setState({\r\n        tableData: this.state.search\r\n      });\r\n      if(this.state.search.length> 1 && this.state.search < 1000) {\r\n        alert('We couldnt find the specified meteorite, the data you see are meteorites with similar names')\r\n      }\r\n      \r\n    }\r\n  };\r\n\r\n  handleChange = e => {\r\n    if (e.target.value === \"\" && this.state.tableData !== this.state.backup) {\r\n      this.setState({\r\n        search: this.state.backup\r\n      });\r\n    } else {\r\n      const def = capitalize.words(e.target.value);\r\n      const lowerCase = e.target.value.toLocaleLowerCase();\r\n      const firstLetterUpperCase =\r\n        e.target.value.charAt(0).toUpperCase() +\r\n        e.target.value.slice(1).toLocaleLowerCase();\r\n      const urls = [\r\n        `https://data.nasa.gov/resource/gh4g-9sfh.json?name=${lowerCase}`,\r\n        `https://data.nasa.gov/resource/gh4g-9sfh.json?name=${firstLetterUpperCase}`,\r\n        `https://data.nasa.gov/resource/gh4g-9sfh.json?name=${def}`,\r\n        `https://data.nasa.gov/resource/gh4g-9sfh.json?$where=name%20like%20%27%25${lowerCase}%25%27`,\r\n        `https://data.nasa.gov/resource/gh4g-9sfh.json?$where=name%20like%20%27%25${firstLetterUpperCase}%25%27`,\r\n        `https://data.nasa.gov/resource/gh4g-9sfh.json?$where=name%20like%20%27%25${def}%25%27`,\r\n        \r\n      ];\r\n    \r\n      Promise.all(\r\n        urls.map(url =>\r\n          fetch(url)\r\n            .then(res => {\r\n              if (res.ok) {\r\n                return res.json();\r\n              } else {\r\n                return null\r\n              }\r\n            })\r\n            .catch(\"error\")\r\n        )\r\n      ).then(data => {\r\n        let biggest = [];\r\n        debugger;\r\n        data.map((meteor, i) => {\r\n          if(meteor === null) \r\n          return null\r\n          if(biggest[0] === undefined ) {\r\n            biggest = meteor\r\n          } else {\r\n            if(biggest.length <= meteor) {\r\n              biggest = meteor\r\n              \r\n            }\r\n          }\r\n        })\r\n\r\n        if(biggest!==null && biggest[0] !== undefined ) {\r\n          \r\n          this.setState({\r\n            search: biggest\r\n          })\r\n        }\r\n      \r\n      });\r\n    }\r\n  \r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    let meteoriteTable;\r\n \r\n    if (this.state.tableData !== null) {\r\n      meteoriteTable = <MeteoriteTable tableData={this.state.tableData} />;\r\n    } else {\r\n      meteoriteTable = <Loading />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <NavBar />\r\n        <form onSubmit={e => e.preventDefault()}>\r\n          <TextField\r\n          \r\n            id=\"search\"\r\n            label=\"Enter Meteorite Name\"\r\n            type=\"text\"\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            onChange={this.handleChange}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            onClick={this.handleClick}\r\n          >\r\n            Search\r\n          </Button>\r\n        </form>\r\n        {meteoriteTable}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport Layout from \"./Containers/Layout/Layout\";\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Layout />\n    </React.Fragment>\n  );\n};\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}